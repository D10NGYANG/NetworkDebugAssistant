plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.dlong.networkdebugassistant"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 7
        versionName "0.1.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file('dlong0232372.keystore')
            storePassword "0232372"
            keyAlias 'ydl'
            keyPassword "0232372"
        }
    }
    buildTypes {
        debug {
            // 开启打印
            buildConfigField "boolean", "IS_LOG_ENABLE", "true"
            minifyEnabled false
            signingConfig signingConfigs.release
        }
        release {
            // 关闭打印
            buildConfigField "boolean", "IS_LOG_ENABLE", "false"
            minifyEnabled true
            signingConfig signingConfigs.release
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "NetworkDebugAssistant-${buildType.name}-${defaultConfig.versionName}-${releaseTime()}.apk"
                }
            }
        }
    }
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    kapt.includeCompileClasspath = false
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("Asia/Shanghai"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'

    // Room components 数据库
    implementation "androidx.room:room-runtime:2.2.6"
    implementation "androidx.room:room-ktx:2.2.6"
    kapt "androidx.room:room-compiler:2.2.6"
    androidTestImplementation "androidx.room:room-testing:2.2.6"
    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    kapt "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1"

    // 弹窗工具
    implementation 'com.github.D10NGYANG:DL10Dialog:1.7.2'

    // 实体转换工具
    implementation 'com.github.D10NGYANG:JsonEntityManager:1.4'

    // 字符串字节数据工具
    implementation 'com.github.D10NGYANG:DLStringUtil:1.7'

    // 调试工具
    debugImplementation 'com.simple:spiderman:1.1.0'
    releaseImplementation 'com.simple:spiderman-no-op:1.1.0'

    // UPD/TCP工具
    //implementation 'com.github.D10NGYANG:NetworkDebugAssistant:0.1.3'
    implementation project(path: ':dl10netassistant')
}
